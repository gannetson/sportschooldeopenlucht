try:
    from .secrets import *
except ImportError:
    import sys
    sys.exit('secrets.py settings file not found. Please run `prepare.sh` to create one.')

from .base import *

#
# Put your local settings overrides below. There are some commented out defaults to get you started.
#

#import logging
## Log debug messages to standard output by default
#logging.basicConfig(level=logging.DEBUG,
#                    format='%(asctime)s %(levelname)-8s %(message)s',
#                    datefmt='[%d/%b/%Y %H:%M:%S]')

## Increase DB debug level
#logging.getLogger('django.db.backends').setLevel(logging.WARNING)


## Consider ourself as internal IP
#from socket import gethostname, gethostbyname
#try:
#    hostname = gethostbyname(gethostname())
#    INTERNAL_IPS = ('127.0.0.1', hostname)
#except:
#    INTERNAL_IPS = ('127.0.0.1', )


## Send email to console by default
#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'



# For DKIM signing add a key here.
# Look at: http://dkimcore.org/tools/keys.html
# DKIM_PRIVATE_KEY = "-----BEGIN RSA PRIVATE KEY-----\n" \
#                   "-----END RSA PRIVATE KEY-----"

# DKIM_DOMAIN = ""
# DKIM_SELECTOR = ""

# EMAIL_BACKEND = 'apps.bluebottle_utils.email_backend.DKIMBackend'




## We don't want to worry about Celery AND be able to test it. Hence we're
## executing tasks synchronously and will use the Django database as a backend.
## Make Celery use Django DB as transport
#INSTALLED_APPS += ('kombu.transport.django',)
#BROKER_URL = 'django://'

## Make Celery debugging a whole lot easier by executing tasks directly
## and allowing them to propagate exceptions.
#CELERY_ALWAYS_EAGER = True
#CELERY_EAGER_PROPAGATES_EXCEPTIONS = True


## sorl-thumbnail - http://sorl-thumbnail.readthedocs.org/en/latest/reference/settings.html
## Raise exceptions for failing thumbnails
#THUMBNAIL_DEBUG = True
## Render dummy thumbnails when real images are not available
# THUMBNAIL_DUMMY = False


## Use django-devserver
#INSTALLED_APPS += ('devserver',)

## Perform Selenium tests
#SELENIUM_TESTS = True
#SELENIUM_WEBDRIVER = 'firefox'  # Can be any of chrome, firefox, phantomjs
